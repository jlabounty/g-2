//Fill an art file with MIDAS data
//fcl file for ibms tutorial
process_name : ibmsTutorial

source: 
{
	module_type : RootInput
}

services : {

	ODBHolder : {}

	message : {

		debugModules : ["*"]
		suppressInfo : []

		destinations : {
			LogToConsole : {
				type      : "cout"
				threshold : "INFO"
			}
			LogToFile : {
				type : "file"
				filename : "gm2nearline_ibmsAnalyzer.log"
				append : false
				threshold : "INFO"
			}
		}//destinations

	}//message

} //services

// modules that must run before filters
common: [FZInflater, UTCAUnpacker, headerUnpacker, RawUnpacker]

physics : {

	filters: {                                                                                           
		MuonFilter: {
			module_type: FillTypeFilter
			throwOnEmptyHeaderCollection: false
			fillType: 1
		}
	}//filters 

	producers: {

		FZInflater: {
			module_type: FZInflater
			bankNames: ["CA","CB", "CR", "LA","LR"]
			validateChecksum: false
			inputModuleLabel: MidasBankInput
		}

		UTCAUnpacker: {
			module_type: UTCAUnpacker
			verboseLevel: 0
			bankPrefixes: ["C", "L"]
			inputModuleLabel: FZInflater
		}

		headerUnpacker: {
			module_type: CaloHeaderUnpacker
			verboseLevel: 0
			bankPrefixes: ["L", "C"]
			inputModuleLabel: FZInflater
			skipIndices: [26,27,28]
		}

		RawUnpacker: {
			module_type: CaloRawUnpacker
			bankPrefixes: ["L", "C"]
			verboseLevel: 0
			// nCrates is just max number it can handle
			nCrates: 27
			skipIndices: [26,27,28]
			inputModuleLabel: FZInflater
		}

		ibmsUnpacker: {
			module_type: IBMSUnpacker 
		}

//		ibmsUnpackerNew: {
//			module_type: IBMSUnpacker 
//		}

		ibmsProcessor:{
			module_type: IBMSProcessor
			ibmsRawModuleLabel: ibmsUnpacker
			ibmsRawInstanceLabel: unpacker
		}

	}

	analyzers:{
		ibmsAnalyzer: {
			module_type: IBMSAnalyzer
			ibmsRawModuleLabel: ibmsUnpacker
			ibmsRawInstanceLabel: unpacker
//			ibmsRawInstanceLabel2: unpacker
//			ibmsRawModuleLabel2: ibmsUnpackerNew
//			ibmsRawInstanceLabel2: unpackerNew
			SelectEvents: ["reconstruct:muonPath"]
		}


	} // analyzers

	// Define paths/streams

//	muonPath   : [MuonFilter, ibmsProcessorNew] 
//	muonPath   : [MuonFilter, ibmsProcessor] 
	analyzerPath  : [ibmsAnalyzer]  
	dataOutputPath : [outfile]

	//List trigger (producer/filter) and end (analyzer/output) paths
//	trigger_paths : [muonPath]
	end_paths     : [analyzerPath, dataOutputPath]
//	end_paths     : [dataOutputPath]

}


outputs : {
	outfile: {
		module_type : RootOutput
		fileName : "ibmsAnalyzer_output.art"
		outputCommands: [ "drop *_*_*_*",
		"keep gm2aux::IBMSRawArtRecords_*_*_*",
		"keep gm2aux::IBMSBeamProfileArtRecords_*_*_*"]
	}
}

